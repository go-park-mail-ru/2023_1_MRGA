upstream golang_backend {
    server server-backend:8080;
}

server {
    listen 81;
    server_name example.com;
    return 301 https://$host:444$request_uri;
}

server {

    listen 444 ssl http2;
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    client_max_body_size 20M;

    ssl_certificate /etc/letsencrypt/live/meetme-app.ru/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/meetme-app.ru/privkey.pem;

    location / {
        proxy_pass http://golang_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location ~* /subscribe$ {
        proxy_pass http://golang_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
