version: "3.8" # версия вашего docker-compose
services: # имеджи, которые запустятся по вашему желанию
  db: # название моего имеджа
    image: postgres:12 # скачает image postgres 12 версии
    volumes: # часть настроек для хранения данных, пока для нас это не важно
      - type: volume
        source: postgresdb-data
        target: /var/lib/postgresql/data
    ports: # порты
      - "5432:5432"
    environment: # переменные окружения, меняйте их если хотите поменять пароль, логин или название стартовой базы данных
      POSTGRES_USER: mrga_user
      POSTGRES_DB: mrga
      POSTGRES_PASSWORD: marga_password
  redis:
    image: redis:6.2-alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass password
    volumes:
      - redis-data:/data
  db-storage:
    image: postgres:latest
    volumes:
      - type: volume
        source: postgresstore-data
        target: /var/lib/postgresql/data

    environment:
      POSTGRES_DB: "mrga_storage"
      POSTGRES_USER: "mrga_user"
      POSTGRES_PASSWORD: "mrga_password"
    ports:
      - "5433:5432"
  db-chat:
    image: postgres:latest
    volumes:
      - type: volume
        source: postgreschat-data
        target: /var/lib/postgresql/data

    environment:
      POSTGRES_DB: "mrga_chat"
      POSTGRES_USER: "mrga_user"
      POSTGRES_PASSWORD: "mrga_password"
    ports:
      - "5434:5432"
  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
  grafana:
    # Change latest with your target version, if needed
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      # Use your plugin folder (e.g. redshift-datasource)
      - grafana-storage:/var/lib/grafana
    environment:
      - TERM=linux
      - GF_LOG_LEVEL=debug
      - GF_DATAPROXY_LOGGING=true
      - GF_DEFAULT_APP_MODE=development
  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: exporter
    hostname: exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default


volumes: # часть настроек для хранения данных
  postgresdb-data:
    driver: local
  redis-data:
    driver: local
  postgresstore-data:
    driver: local
  postgreschat-data:
    driver: local
  grafana-storage:
  prometheus_data:
